<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RestMember">
	<!-- 휴면회원 검색 조건 -->
    <sql id="RestMemberWhere">
        <if test="searchId != null and searchId != ''">
            AND MEM_MST_MEM_ID LIKE TRIM(#{searchId}) || '%'
        </if>
        <if test="searchNm != null and searchNm != ''">
            AND MEM_MST_MEM_NM LIKE TRIM(#{searchNm}) || '%'
        </if>
        <if test="searchTel != null and searchTel != ''">
            AND MEM_MST_HP3 LIKE '%' || TRIM(#{searchTel}) || '%'        
        </if>
		<if test="searchBirth != null and searchBirth != ''">
            AND MEM_MST_BIR_DT LIKE '%' || TRIM(#{searchBirth}) || '%'
        </if>
		<if test="searchMemberType != null and searchMemberType != ''">
            AND MEM_MST_MEM_GBN = TRIM(#{searchMemberType})
        </if>
        <if test="searchMemGrade != null and searchMemGrade != ''">
            AND MEM_MST_MEM_GRD = TRIM(#{searchMemGrade})
        </if>
        <if test="searchEmail != null and searchEmail != ''">
            AND MEM_MST_MAIL LIKE '%' ||  TRIM(#{searchEmail}) || '%'
        </if>
        <if test="searchSex != null and searchSex != ''">
            AND MEM_MST_SEX = TRIM(#{searchSex})
        </if>
		<if test="searchInfoStartDate != null and searchInfoStartDate != '' and searchInfoEndDate != null and searchInfoEndDate != ''">
            AND MEM_MST_REG_DT BETWEEN REPLACE(TRIM(#{searchInfoStartDate}),'-', '')||'000000' AND REPLACE(TRIM(#{searchInfoEndDate}),'-', '')||'235959'
        </if>
        <if test="searchRestStartDate != null and searchRestStartDate != '' and searchRestEndDate != null and searchRestEndDate != ''">
            AND MEM_MST_RST_DT BETWEEN REPLACE(TRIM(#{searchRestStartDate}),'-', '')||'000000' AND REPLACE(TRIM(#{searchRestEndDate}),'-', '')||'235959'
        </if>
        
        <if test="search3626 != null and search3626 != ''">
            AND  EXISTS (  SELECT MEM_MST_MEM_ID FROM  T_MEM_SPC_PRV  MSP  WHERE TMV.MEM_MST_MEM_ID = MSP.mem_mst_mem_id  and MSP.CMN_COM_IDX = '3626'  AND TO_CHAR( SYSDATE , 'YYYYMMDDHH24MISS' )  BETWEEN MEM_SPC_PRV_BG_DT || '000000' AND MEM_SPC_PRV_EXP_DT || '235959')
        </if>
        <if test="search3627 != null and search3627 != ''">
            AND  EXISTS (  SELECT MEM_MST_MEM_ID FROM  T_MEM_SPC_PRV  MSP  WHERE TMV.MEM_MST_MEM_ID = MSP.mem_mst_mem_id  and MSP.CMN_COM_IDX = '3627'  AND TO_CHAR( SYSDATE , 'YYYYMMDDHH24MISS' )  BETWEEN MEM_SPC_PRV_BG_DT || '000000'AND MEM_SPC_PRV_EXP_DT || '235959')
        </if>
        <if test="search3628 != null and search3628 != ''">
            AND  EXISTS (  SELECT MEM_MST_MEM_ID FROM  T_MEM_SPC_PRV  MSP  WHERE TMV.MEM_MST_MEM_ID = MSP.mem_mst_mem_id  and MSP.CMN_COM_IDX = '3628'  AND TO_CHAR( SYSDATE , 'YYYYMMDDHH24MISS' )  BETWEEN MEM_SPC_PRV_BG_DT || '000000' AND MEM_SPC_PRV_EXP_DT|| '235959' )
        </if>   
        
        
    </sql>
    
    <!-- 관리자 > 회원관리 > 휴면회원관리 목록 갯수 -->
    <select id="selectRestMemberListCount" parameterType="HashMap" resultType="Integer">
    	/* RestMember.selectRestMemberListCount */
    	SELECT
    		COUNT(1)
    	FROM
    		T_MEM_RST TMV
    	WHERE
    		MEM_MST_LEV_YN = 'N'
    		<include refid="RestMemberWhere"/>
    </select>
    
    <!-- 관리자 > 회원관리 > 휴면회원관리 목록 -->
    <select id="selectRestMemberList" parameterType="HashMap" resultType="HashMap">
    	/* RestMember.selectRestMemberList */	
    	SELECT
    		S2.*
    	FROM
    	(
    		SELECT
	    		ROWNUM AS RNUM,
	    		S1.*
	    	FROM
	    	(
	    		SELECT
					MEM_MST_MEM_ID,
	                MEM_MST_MEM_NM,
	                MEM_MST_SEX,
	                MEM_MST_MAIL,
	                MEM_MST_HP1,
	                MEM_MST_HP2,
	                MEM_MST_HP3,
	                MEM_MST_RST_DT,
	                MEM_MST_MEM_GBN,
	                MEM_MST_VST_LAT,
	                MEM_MST_REG_DT,
	                MEM_MST_BIR_DT,
	                MEM_MST_ERP_ID,
	                (SELECT CMN_COM_NM FROM T_CMM_COM TCC WHERE TCC.CMN_COM_IDX = MEM_MST_MEM_GBN) AS MEM_MST_MEM_GBN_NM,
					(SELECT CMN_COM_NM FROM T_CMM_COM TCC WHERE TCC.CMN_COM_IDX = MEM_MST_MEM_GRD) AS MEM_MST_MEM_GRD,
	                NVL(( SELECT MEM_PIT_TOT_PIT FROM (SELECT * FROM T_MEM_PIT TMP     ORDER BY MEM_PIT_REG_DT DESC ) TMP WHERE TMP.MEM_PIT_MEM_ID = MEM_MST_MEM_ID AND ROWNUM = 1),0) AS MEM_PIT_TOT_PIT,
                    NVL(( SELECT MEM_PIT_TOT_PIT FROM (SELECT * FROM T_MEM_PIT_TOT TMP ORDER BY MEM_PIT_REG_DT DESC ) TMP WHERE TMP.MEM_PIT_MEM_ID = MEM_MST_MEM_ID AND ROWNUM = 1),0) AS MEM_TOT_POINT  ,
	                TO_CHAR(TO_DATE(MEM_MST_RST_DT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS MEM_REG_DT
		    	FROM
		    		T_MEM_RST TMV
		    	WHERE
		    		TMV.MEM_MST_LEV_YN = 'N'
		    		<include refid="RestMemberWhere"/>
		    	ORDER BY TMV.MEM_MST_RST_DT DESC
	    	) S1
    	) S2
        <if test="startNum != null and startNum != '' and endNum != null and endNum != ''">
            WHERE S2.RNUM BETWEEN #{startNum} AND #{endNum} 
        </if>   
    </select>
    
    <select id="selectRestMemberListExcel" parameterType="hashMap" resultType="hashMap">
	    /* RestMember.selectRestMemberListExcel */
    	SELECT
    		S2.*
    	FROM
    	(
    		SELECT
	    		ROWNUM AS RNUM,
				S1.EVT_COUNT_ETR + S1.EVT_COUNT_IMG + S1.EVT_COUNT_RPL + S1.EVT_COUNT_SVY AS TOT_EVT_WIN_COUNT ,				
	    		S1.*
	    	FROM
	    	(
                SELECT
                    TMV.MEM_MST_MEM_ID,
                    TMV.MEM_MST_ERP_ID ,
                    TMV.MEM_MST_MEM_NM,
                    TMI.MEM_IPN_SEX,
                    DECODE( NVL( TMI.MEM_IPN_SEX , TMV.MEM_MST_SEX) , 'M' , '남성' , 'F' , '여성' , '') AS MEM_IPN_SEX_NM , 
                    TMV.MEM_MST_BIR_DT AS MEM_IPN_BIR,
                    '양력' as BIR_TYPE, 
                    'Y' as REAL_NAME_CHECK , 
                    TMV.MEM_MST_MEM_GBN,
                    (SELECT CMN_COM_NM FROM T_CMM_COM TCC WHERE TCC.CMN_COM_IDX = TMV.MEM_MST_MEM_GBN) AS MEM_MST_MEM_GBN_NM,
                    (SELECT CMN_COM_NM FROM T_CMM_COM TCC WHERE TCC.CMN_COM_IDX = TMV.MEM_MST_MEM_GRD) AS MEM_MST_MEM_GRD,
                    /*
                    TMV.MEM_MST_ZIP_CDE5 ,
                    TMV.MEM_MST_DRO_ADR1,
                    TMV.MEM_MST_DRO_ADR2,  
                    */
                    MEM_DLV_ZIP_CDE5 AS MEM_MST_ZIP_CDE5 ,
                    MEM_DLV_DRO_ADR1 AS MEM_MST_DRO_ADR1,
                    MEM_DLV_DRO_ADR2 AS MEM_MST_DRO_ADR2,                    
                    REPLACE( TMV.MEM_MST_TEL3 || '-' || TMV.MEM_MST_TEL3 || '-' || TMV.MEM_MST_TEL3 , '--' , '')  AS MEM_MST_TEL,
                    REPLACE( TMV.MEM_MST_HP1 || '-' || TMV.MEM_MST_HP2 || '-' || TMV.MEM_MST_HP3 , '--' , '')  AS MEM_MST_HP,
                    TMV.MEM_MST_MAIL,                    
                    NVL(( SELECT MEM_PIT_TOT_PIT FROM (SELECT * FROM T_MEM_PIT     TMP ORDER BY MEM_PIT_REG_DT DESC ) TMP WHERE TMP.MEM_PIT_MEM_ID = TMV.MEM_MST_MEM_ID AND ROWNUM = 1),0) AS MEM_E_POINT  ,
                    NVL(( SELECT MEM_PIT_TOT_PIT FROM (SELECT * FROM T_MEM_PIT_SW  TMP ORDER BY MEM_PIT_REG_DT DESC ) TMP WHERE TMP.MEM_PIT_MEM_ID = TMV.MEM_MST_MEM_ID AND ROWNUM = 1),0) AS MEM_SW_POINT ,
                    NVL(( SELECT MEM_PIT_TOT_PIT FROM (SELECT * FROM T_MEM_PIT_TOT TMP ORDER BY MEM_PIT_REG_DT DESC ) TMP WHERE TMP.MEM_PIT_MEM_ID = TMV.MEM_MST_MEM_ID AND ROWNUM = 1),0) AS MEM_TOT_POINT,                                                            
                    TO_CHAR(TO_DATE(TMV.MEM_MST_REG_DT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS MEM_REG_DT ,
                    TO_CHAR(TO_DATE(TMV.MEM_MST_REG_DT,'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS MEM_REG_TM , 
                    NVL( TMV.MEM_MST_UPD_IP  , TMV.MEM_MST_REG_IP ) AS  MEM_MST_UPD_IP,	
                    (SELECT MEM_AGR_TRM_YN  FROM T_MEM_AGR TMA WHERE TMV.MEM_MST_MEM_ID = TMA.MEM_AGR_MEM_ID AND TMA.MEM_AGR_TRM_CD = '0001') AS SMS_YN , 
                    (SELECT MEM_AGR_TRM_YN  FROM T_MEM_AGR TMA WHERE TMV.MEM_MST_MEM_ID = TMA.MEM_AGR_MEM_ID AND TMA.MEM_AGR_TRM_CD = '0004') AS EMAIL_YN , 
                    (SELECT MEM_AGR_TRM_YN  FROM T_MEM_AGR TMA WHERE TMV.MEM_MST_MEM_ID = TMA.MEM_AGR_MEM_ID AND TMA.MEM_AGR_TRM_CD = '0006') AS KAKAO_YN , 
                    ( select count(*) as TOT_ORD_CNT from T_ORD_MST TOM where   TMV.MEM_MST_MEM_ID = TOM.ord_mst_ord_id ) AS TOT_ORD_CNT , -- 누적주문건수
                    NVL(( select SUM( ORD_MST_PAY_PRC ) as TOT_ORD_PAY from T_ORD_MST TOM where   TMV.MEM_MST_MEM_ID = TOM.ord_mst_ord_id ),0) AS TOT_ORD_PAY , -- 누적실결제금액
                    NVL(( select count(*) as REAL_ORD_CNT from T_ORD_MST TOM where   TMV.MEM_MST_MEM_ID = TOM.ord_mst_ord_id AND TOM.ORD_MST_PAY_TYPE = '409' ),0) AS REAL_ORD_CNT , -- 누적주문건수
                    NVL(( select SUM( ORD_MST_PAY_PRC ) as REAL_ORD_PAY from T_ORD_MST TOM where   TMV.MEM_MST_MEM_ID = TOM.ord_mst_ord_id AND TOM.ORD_MST_PAY_TYPE = '409' ),0) AS REAL_ORD_PAY , -- 누적실결제금액                    
                    NVL(( SELECT TO_CHAR(TO_DATE(ORD_MST_ORD_DT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')  FROM (SELECT * FROM T_ORD_MST  TOM  ORDER BY ORD_MST_ORD_DT DESC ) TMP WHERE TMV.MEM_MST_MEM_ID = TMP.ord_mst_ord_id AND ROWNUM = 1),'')  AS LAST_ORD_DT  ,
                    DECODE( ( SELECT COUNT(*) AS TOT_CNT  FROM T_MEM_SPC_PRV  MSP  WHERE    TMV.MEM_MST_MEM_ID = MSP.mem_mst_mem_id  and MSP.CMN_COM_IDX = '3628'  )  , 0 , 'N' , 'Y' ) AS REVIEWER_TYPE ,
                    ( SELECT COUNT( DISTINCT EVT_MST_IDX)  FROM  T_EVT_ETR TEE WHERE TEE.EVT_ETR_WIN_YN = 'Y' AND TMV.MEM_MST_MEM_ID =  TEE.EVT_ETR_REG_ID  ) AS EVT_COUNT_ETR ,
                    ( SELECT COUNT( DISTINCT EVT_MST_IDX)  FROM  T_EVT_IMG  TEE WHERE TEE.EVT_IMG_WIN_YN = 'Y' AND TMV.MEM_MST_MEM_ID =  TEE.EVT_IMG_REG_IP  ) AS EVT_COUNT_IMG ,
                    ( SELECT COUNT( DISTINCT EVT_MST_IDX)  FROM  T_EVT_RPL TEE WHERE TEE.EVT_RPL_WIN_YN = 'Y' AND TMV.MEM_MST_MEM_ID =  TEE.EVT_RPL_REG_IP  ) AS EVT_COUNT_RPL ,
                    ( SELECT COUNT( DISTINCT EVT_MST_IDX )  FROM T_EVT_SVY S, T_EVT_DTL D WHERE S.EVT_SVY_WIN_YN = 'Y' AND S.EVT_DTL_IDX = D.EVT_DTL_IDX AND TMV.MEM_MST_MEM_ID =  S.EVT_SVY_REG_ID   ) AS EVT_COUNT_SVY 
					
		    	FROM
		    		T_MEM_RST TMV
                     left outer join  T_MEM_IPN TMI ON TMV.MEM_MST_MEM_ID = TMI.MEM_MST_MEM_ID 
                     LEFT OUTER  JOIN T_MEM_DLV TMD ON TMV.MEM_MST_MEM_ID = TMD.MEM_MST_MEM_ID
		    	WHERE
		    		TMV.MEM_MST_LEV_YN = 'N'
		    		<include refid="RestMemberWhere"/>
		    	ORDER BY TMV.MEM_MST_RST_DT DESC
	    	) S1
    	) S2
        <if test="startNum != null and startNum != '' and endNum != null and endNum != ''">
            WHERE S2.RNUM BETWEEN #{startNum} AND #{endNum} 
        </if>   		
    </select>    
    
    <insert id="insertRestMember" parameterType="HashMap">
        /* RestMember.insertRestMember */
        INSERT INTO 
            T_MEM_RST (
                 MEM_MST_MEM_ID
                ,MEM_MST_MEM_NM
                ,MEM_MST_PW
                ,MEM_MST_MAIL
                ,MEM_MST_MEM_GB
                ,MEM_MST_MEM_GBN
                ,MEM_MST_MEM_GRD
                ,MEM_MST_ZIP_CDE6
                ,MEM_MST_JBN_ADR1
                ,MEM_MST_JBN_ADR2
                ,MEM_MST_ZIP_CDE5
                ,MEM_MST_DRO_ADR1
                ,MEM_MST_DRO_ADR2
                ,MEM_MST_TEL1
                ,MEM_MST_TEL2
                ,MEM_MST_TEL3
                ,MEM_MST_HP1
                ,MEM_MST_HP2
                ,MEM_MST_HP3
                ,MEM_MST_STATUS
                ,MEM_MST_LEV_DT
                ,MEM_MST_LEV_YN
                ,MEM_MST_LEV_RSN_CD
                ,MEM_MST_LEV_RSN
                ,MEM_MST_NOTE
                ,MEM_MST_BIR_DT
                ,MEM_MST_VST_CNT
                ,MEM_MST_VST_LAT
                ,MEM_MST_SEX
                ,MEM_MST_TMP_PW_YN
                ,MEM_MST_TMP_PW_DT
                ,MEM_MST_DCT_YN
                ,MEM_MST_REG_DT
                ,MEM_MST_REG_IP
                ,MEM_MST_REG_ID
                ,MEM_MST_UPD_DT
                ,MEM_MST_UPD_IP
                ,MEM_MST_UPD_ID
                ,MEM_MST_TKN_ID
                ,MEM_MST_DVS
                ,MEM_MST_PSH_YN
                ,MEM_MST_NCK_NM
                ,MEM_MST_STY_JOB
                ,MEM_MST_STY_HEIGHT
                ,MEM_MST_STY_WEIGHT
                ,MEM_MST_PRF_IMG
                ,MEM_MST_MEM_PW_CHG_DT
                ,MEM_MST_SW_ID
                ,MEM_MST_SW_TYPE
                ,MEM_MST_ERP_ID
                ,MEM_MST_RST_DT
            ) 
            SELECT 
                 MEM_MST_MEM_ID
                ,MEM_MST_MEM_NM
                ,MEM_MST_PW
                ,MEM_MST_MAIL
                ,MEM_MST_MEM_GB
                ,MEM_MST_MEM_GBN
                ,MEM_MST_MEM_GRD
                ,MEM_MST_ZIP_CDE6
                ,MEM_MST_JBN_ADR1
                ,MEM_MST_JBN_ADR2
                ,MEM_MST_ZIP_CDE5
                ,MEM_MST_DRO_ADR1
                ,MEM_MST_DRO_ADR2
                ,MEM_MST_TEL1
                ,MEM_MST_TEL2
                ,MEM_MST_TEL3
                ,MEM_MST_HP1
                ,MEM_MST_HP2
                ,MEM_MST_HP3
                ,MEM_MST_STATUS
                ,MEM_MST_LEV_DT
                ,MEM_MST_LEV_YN
                ,MEM_MST_LEV_RSN_CD
                ,MEM_MST_LEV_RSN
                ,MEM_MST_NOTE
                ,MEM_MST_BIR_DT
                ,MEM_MST_VST_CNT
                ,MEM_MST_VST_LAT
                ,MEM_MST_SEX
                ,MEM_MST_TMP_PW_YN
                ,MEM_MST_TMP_PW_DT
                ,MEM_MST_DCT_YN
                ,MEM_MST_REG_DT
                ,MEM_MST_REG_IP
                ,MEM_MST_REG_ID
                ,MEM_MST_UPD_DT
                ,MEM_MST_UPD_IP
                ,MEM_MST_UPD_ID
                ,MEM_MST_TKN_ID
                ,MEM_MST_DVS
                ,MEM_MST_PSH_YN
                ,MEM_MST_NCK_NM
                ,MEM_MST_STY_JOB
                ,MEM_MST_STY_HEIGHT
                ,MEM_MST_STY_WEIGHT
                ,MEM_MST_PRF_IMG
                ,MEM_MST_MEM_PW_CHG_DT
                ,MEM_MST_SW_ID
                ,MEM_MST_SW_TYPE
                ,MEM_MST_ERP_ID
                ,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
            FROM T_MEM_MST
           WHERE MEM_MST_MEM_ID = #{MEM_MST_MEM_ID}
    </insert>
    
    <insert id="insertMasterMember" parameterType="HashMap">
        /* RestMember.insertMasterMember */
        INSERT INTO T_MEM_MST (
                 MEM_MST_MEM_ID
                ,MEM_MST_MEM_NM
                ,MEM_MST_PW
                ,MEM_MST_MAIL
                ,MEM_MST_MEM_GB
                ,MEM_MST_MEM_GBN
                ,MEM_MST_MEM_GRD
                ,MEM_MST_ZIP_CDE6
                ,MEM_MST_JBN_ADR1
                ,MEM_MST_JBN_ADR2
                ,MEM_MST_ZIP_CDE5
                ,MEM_MST_DRO_ADR1
                ,MEM_MST_DRO_ADR2
                ,MEM_MST_TEL1
                ,MEM_MST_TEL2
                ,MEM_MST_TEL3
                ,MEM_MST_HP1
                ,MEM_MST_HP2
                ,MEM_MST_HP3
                ,MEM_MST_STATUS
                ,MEM_MST_LEV_DT
                ,MEM_MST_LEV_YN
                ,MEM_MST_LEV_RSN_CD
                ,MEM_MST_LEV_RSN
                ,MEM_MST_NOTE
                ,MEM_MST_BIR_DT
                ,MEM_MST_VST_CNT
                ,MEM_MST_VST_LAT
                ,MEM_MST_SEX
                ,MEM_MST_TMP_PW_YN
                ,MEM_MST_TMP_PW_DT
                ,MEM_MST_DCT_YN
                ,MEM_MST_REG_DT
                ,MEM_MST_REG_IP
                ,MEM_MST_REG_ID
                ,MEM_MST_UPD_DT
                ,MEM_MST_UPD_IP
                ,MEM_MST_UPD_ID
                ,MEM_MST_TKN_ID
                ,MEM_MST_DVS
                ,MEM_MST_PSH_YN
                ,MEM_MST_NCK_NM
                ,MEM_MST_STY_JOB
                ,MEM_MST_STY_HEIGHT
                ,MEM_MST_STY_WEIGHT
                ,MEM_MST_PRF_IMG
                ,MEM_MST_MEM_PW_CHG_DT
                ,MEM_MST_SW_ID
                ,MEM_MST_SW_TYPE
                ,MEM_MST_ERP_ID
            )
            SELECT 
                 MEM_MST_MEM_ID
                ,MEM_MST_MEM_NM
                ,MEM_MST_PW
                ,MEM_MST_MAIL
                ,MEM_MST_MEM_GB
                ,MEM_MST_MEM_GBN
                ,MEM_MST_MEM_GRD
                ,MEM_MST_ZIP_CDE6
                ,MEM_MST_JBN_ADR1
                ,MEM_MST_JBN_ADR2
                ,MEM_MST_ZIP_CDE5
                ,MEM_MST_DRO_ADR1
                ,MEM_MST_DRO_ADR2
                ,MEM_MST_TEL1
                ,MEM_MST_TEL2
                ,MEM_MST_TEL3
                ,MEM_MST_HP1
                ,MEM_MST_HP2
                ,MEM_MST_HP3
                ,MEM_MST_STATUS
                ,MEM_MST_LEV_DT
                ,MEM_MST_LEV_YN
                ,MEM_MST_LEV_RSN_CD
                ,MEM_MST_LEV_RSN
                ,MEM_MST_NOTE
                ,MEM_MST_BIR_DT
                ,MEM_MST_VST_CNT
                ,MEM_MST_VST_LAT
                ,MEM_MST_SEX
                ,MEM_MST_TMP_PW_YN
                ,MEM_MST_TMP_PW_DT
                ,MEM_MST_DCT_YN
                ,MEM_MST_REG_DT
                ,MEM_MST_REG_IP
                ,MEM_MST_REG_ID
                ,MEM_MST_UPD_DT
                ,MEM_MST_UPD_IP
                ,MEM_MST_UPD_ID
                ,MEM_MST_TKN_ID
                ,MEM_MST_DVS
                ,MEM_MST_PSH_YN
                ,MEM_MST_NCK_NM
                ,MEM_MST_STY_JOB
                ,MEM_MST_STY_HEIGHT
                ,MEM_MST_STY_WEIGHT
                ,MEM_MST_PRF_IMG
                ,MEM_MST_MEM_PW_CHG_DT
                ,MEM_MST_SW_ID
                ,MEM_MST_SW_TYPE
                ,MEM_MST_ERP_ID
            FROM T_MEM_RST
           WHERE MEM_MST_MEM_ID = #{MEM_MST_MEM_ID}
    </insert>
    
    <delete id="deleteMasterMember" parameterType="HashMap">
        /* RestMember.deleteMasterMember */
        DELETE FROM T_MEM_MST
         WHERE MEM_MST_MEM_ID IN
         <foreach collection="MEM_MST_MEM_ID" item="ID" open="(" close=")" separator=",">
         #{ID}
         </foreach>
        
    </delete>  
    <delete id="deleteRestMember" parameterType="HashMap">
        /* RestMember.deleteRestMember */
        DELETE FROM T_MEM_RST
         WHERE MEM_MST_MEM_ID IN
         <foreach collection="MEM_MST_MEM_ID" item="ID" open="(" close=")" separator=",">
         #{ID}
         </foreach>
    </delete>  
</mapper>