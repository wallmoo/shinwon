<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchOrderState">
    
    <!-- 전체주문 > 상세 > 주문정보 -->
    <select id="selectOrderInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectOrderInfo */
        SELECT 
            OM.ORD_MST_CD 
            , OM.ORD_MST_ORD_DT 
            , OM.ORD_MST_PAY_PRC 
            , OM.ORD_MST_PAY_TYPE
            , (SELECT CMN_COM_NM FROM T_CMM_COM WHERE CMN_COM_IDX = OM.ORD_MST_PAY_TYPE) as ORD_MST_PAY_TYPE_NM
            , (
                SELECT 
                    CMN_COM_NM
                FROM T_CMM_COM 
                WHERE CMN_COM_IDX = (SELECT MEM_MST_MEM_GBN FROM T_MEM_VIEW WHERE MEM_MST_MEM_ID = OM.ORD_MST_ORD_ID)
              ) as MEM_MST_GB_NM
            , ORD_MST_ORD_TYPE
            , (SELECT MEM_MST_ERP_ID FROM T_MEM_VIEW WHERE MEM_MST_MEM_ID = OM.ORD_MST_ORD_ID) as MEM_MST_ERP_ID
            , OM.ORD_MST_ORD_ID 
            , OM.ORD_MST_ORD_NM 
            , OM.ORD_MST_HP1
            , OM.ORD_MST_HP2
            , OM.ORD_MST_HP3 as ORD_MST_HP3
            , OM.ORD_MST_HP1||'-'||OM.ORD_MST_HP2||'-'||OM.ORD_MST_HP3 as ORD_MST_HP
            , OM.ORD_MST_ORD_PRC 
            , NVL(OM.ORD_MST_DLV_CAG,0) as ORD_MST_DLV_CAG
            , NVL(OM.ORD_MST_DC_MLG,0) as ORD_MST_DC_MLG 
            , NVL(OM.ORD_MST_DC_CPN,0) as ORD_MST_DC_CPN
            , OM.ORD_MST_MAIL AS ORD_MST_MAIL
            , OM.ORD_MST_RFD_NM
            , DECODE(OM.ORD_MST_RFD_ACT, NULL, '', OM.ORD_MST_RFD_ACT) AS ORD_MST_RFD_ACT
            , OM.ORD_MST_RFD_HDR
            , OM.ORD_MST_CSH_RCP
            , '' AS MEMBER_GROUP_NM
            , '' as CPON_NO
            ,  NVL(ORD_MST_DC_OCB_PIT, '0') as ORD_MST_DC_OCB_PIT
            , ORD_MST_DPS_NM
            , (SELECT COUNT(1) FROM T_ORD_MST WHERE ORD_MST_PRE_CD = OM.ORD_MST_CD) as REPAY_ORD_CNT /* 해당 주문에 대한 재결제 주문 존재 여부 */
            , ORD_MST_PRE_CD /* 재결제 주문인 경우 원주문번호 */
            , ORD_MST_DLV_GBN /* 상품배송유형 */
            , ORD_GET_SHP_MST_IDX   
            , (SELECT SHP_MST_NM FROM T_SHP_MST WHERE SHP_MST_IDX = ORD_GET_SHP_MST_IDX) as SHP_MST_NM
            , (SELECT SHP_MST_TEL FROM T_SHP_MST WHERE SHP_MST_IDX = ORD_GET_SHP_MST_IDX) as SHP_MST_TEL
            , ORD_GET_TIK       
            , ORD_GET_TIK_YN    
            , NVL(ORD_GET_SMS_CNT, 0) as    ORD_GET_SMS_CNT
            , NVL(ORD_GET_ADM_SMS_CNT, 0) as    ORD_GET_ADM_SMS_CNT
            , ORD_GET_NM        
            , ORD_GET_GBN       
            , ORD_GET_RLT       
            , ORD_GET_TEL1      
            , ORD_GET_TEL2  
            , DECODE(ORD_GET_TEL3, NULL, '', ORD_GET_TEL3) as ORD_GET_TEL3   
            , ORD_GET_PKU_DT    
            , ORD_GET_PKU_HH
            , (
                SELECT 
                    MAX(FN_GET_PRODUCT_NM(ORD_PRD_MST_CD,30)) KEEP(DENSE_RANK FIRST ORDER BY ORD_PRD_IDX) 
                FROM T_ORD_PRD 
                WHERE ORD_ORD_MST_CD = OM.ORD_MST_CD
                <if test="ORD_PRD_IDX != null and ORD_PRD_IDX != ''">
                    AND ORD_PRD_IDX = #{ORD_PRD_IDX}
                </if>
                ) as PRD_NM /* 상품명(SMS 발송용) */  
            , (SELECT MAX(ORD_PRD_SLP_NO) FROM T_ORD_PRD WHERE ORD_ORD_MST_CD = OM.ORD_MST_CD) as ORD_SLP_NO /* 전표번호 */
        FROM 
            T_ORD_MST OM, T_ORD_GET OG
        WHERE
            OM.ORD_MST_CD = OG.ORD_MST_CD(+)
            AND OM.ORD_MST_CD=#{ORD_MST_CD}
    </select>    
    
    
    <!-- 전체주문 > 상세 > 수령정보 -->
    <select id="selectDeliveryInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectDeliveryInfo */
        SELECT 
            ORD_ORD_MST_CD 
            , ORD_DLV_NM 
            , ORD_DLV_HP1
            , ORD_DLV_HP2
            , DECODE(ORD_DLV_HP3, NULL, '', ORD_DLV_HP3) as ORD_DLV_HP3            
            , ORD_DLV_HP1||ORD_DLV_HP2||DECODE(ORD_DLV_HP3, NULL, '', ORD_DLV_HP3) as ORD_DLV_HP
            , ORD_DLV_TEL1
            , ORD_DLV_TEL2
            , ORD_DLV_TEL3 as ORD_DLV_TEL3
            , ORD_DLV_TEL1||ORD_DLV_TEL2|| ORD_DLV_TEL3 as ORD_DLV_TEL
            , ORD_DLV_ZIP_CDE6 
            , ORD_DLV_JBN_ADR1 
            , ORD_DLV_JBN_ADR2 
            , ORD_DLV_MSG
            , ORD_DLV_ZIP_CDE5
            , ORD_DLV_DRO_ADR1 
            , ORD_DLV_DRO_ADR2 
        FROM  
            T_ORD_DLV OD
        WHERE
            ORD_ORD_MST_CD=#{ORD_MST_CD}
    </select>    
    
    
    <!-- 주문/배송 현황(할인/결제정보) -->
    <select id="selectOrderPayInfo" parameterType="hashMap" resultType="hashMap">
        /* BatchOrderState.selectOrderPayInfo */
        SELECT
            T1.*
        FROM
        (
        SELECT
            ROW_NUMBER() OVER(ORDER BY PAY_MST_IDX DESC) as RNUM
            , PAY_MST_IDX
            , ORD_MST_CD
            , ORD_MST_ORD_DT 
            , ORD_MST_PAY_TYPE
            , ORD_MST_RFD_CD /* 환불은행코드 */
            , ORD_MST_RFD_NM /* 환불은행명 */
            , DECODE(ORD_MST_RFD_ACT, '', '', ORD_MST_RFD_ACT) AS ORD_MST_RFD_ACT /* 환불계좌번호 */
            , ORD_MST_RFD_HDR /* 환불예금주명 */
            , ORD_MST_PAY_DT
            , ORD_MST_ORD_PRC
            , NVL(ORD_MST_DC_CPN,0) as ORD_MST_DC_CPN
            , NVL(ORD_MST_DC_MLG,0) as ORD_MST_DC_MLG
            , NVL(ORD_MST_DC_OCB_PIT,0) as ORD_MST_DC_OCB_PIT
            , ORD_MST_PAY_PRC
            , ORD_MST_DLV_CAG
            , ORD_MST_DPS_NM
            , PAY_MST_PRODUCTINFO
            , PAY_MST_TID 
            , PAY_MST_MID 
            , PAY_MST_OID 
            , PAY_MST_HASHDATA 
            , PAY_MST_ESCROWYN
            , PAY_MST_PAYDATE 
            , PAY_MST_PAYTYPE 
            , PAY_MST_FINANCECODE 
            , PAY_MST_FINANCENAME 
            , PAY_MST_AMOUNT 
            , PAY_MST_TRANSAMOUNT 
            , PAY_MST_EXCHANGERATE
            , PAY_MST_BUYER 
            , PAY_MST_BUYERID 
            , PAY_MST_BUYERPHONE 
            , PAY_MST_BUYEREMAIL 
            , PAY_MST_CARDINSTALLMONTH 
            , PAY_MST_CARDNOINTYN 
            , PAY_MST_FINANCEAUTHNUM
            , PAY_MST_ACCOUNTNUM 
            , PAY_MST_CASTAMOUNT 
            , PAY_MST_CASCAMOUNT 
            , PAY_MST_CASFLAG 
            , PAY_MST_CASSEQNO 
            , PAY_MST_CLOSEDATE
            , PAY_MST_CASHRECEIPTNUM 
            , PAY_MST_CASHRECEIPTSELFYN 
            , PAY_MST_CASHRECEIPTKIND
            , PAY_MST_TELNO
            , PAY_MST_KAKAO_AUTHCODE
            , PAY_MST_KAKAO_CARDNAME
            , PAY_MST_KAKAO_CARDBIN
            , PAY_MST_KAKAO_CARDQUOTA
            , ORD_MST_HP1
            , ORD_MST_HP2
            , ORD_MST_HP3 as ORD_MST_HP3
            , PAY_MST_KICC_AUTH_NO
            , PAY_MST_KICC_TRAN_DATE
            , PAY_MST_KICC_CARD_NO
            , SUBSTR(PAY_MST_KICC_CARD_NO, 0, 4)||'-'|| SUBSTR(PAY_MST_KICC_CARD_NO, 5, 4) || '-****-****' as MASKING_KICC_CARD_NO
            , PAY_MST_KICC_ISSUER_CD
            , PAY_MST_KICC_ISSUER_NM
            , PAY_MST_KICC_ACQUIRER_CD
            , PAY_MST_KICC_ACQUIRER_NM
            , PAY_MST_KICC_INSTALL_PERIOD
            , PAY_MST_KICC_NOINT
            , PAY_MST_KICC_PNT_AUTH_NO
            , PAY_MST_KICC_PNT_TRAN_DATE
            , PAY_MST_KICC_BANK_CD
            , PAY_MST_KICC_BANK_NM
            , PAY_MST_KICC_ACCOUNT_NO
            , PAY_MST_KICC_DEPOSIT_NM
            , PAY_MST_KICC_EXPIRE_DATE
            , PAY_MST_KICC_CASH_RES_CD
            , PAY_MST_KICC_CASH_RES_MSG
            , PAY_MST_KICC_CASH_AUTH_NO
            , PAY_MST_KICC_CASH_TRAN_DATE
            , PAY_MST_KICC_AUTH_ID
            , PAY_MST_KICC_BILLID
            , PAY_MST_KICC_MOBILE_NO
            , PAY_MST_KICC_USED_PNT
            , PAY_MST_KICC_REMAIN_PNT
            , PAY_MST_KICC_PAY_PNT
            , PAY_MST_KICC_ACCURE_PNT
            , PAY_MST_KICC_ESCROW_YN
            , PAY_MST_KICC_COMPLEX_YN
            , PAY_MST_KICC_CANC_ACQ_DATE
            , PAY_MST_KICC_CANC_DATE
            , PAY_MST_KICC_REFUND_DATE
            , PAY_MST_KICC_ARS_NO
            , NVL(OM.ORD_MST_SAV_MLG,0) as TOT_ORD_SAV_MIL /* 총 적립예정 마일리지 */
            , NVL(OM.ORD_MST_SAV_OCB,0) as TOT_ORD_SAV_OCB /* 총 적립예정 캐쉬백 */
            , (SELECT SUM(NVL(ORD_PRD_IST_CPN_PRC,0)*(DECODE(ORD_PRD_ORG_IDX, NULL, ORD_PRD_ORD_CNT, 0))) FROM T_ORD_PRD WHERE ORD_ORD_MST_CD = OM.ORD_MST_CD) as TOT_ORD_IST_CPN_PRC /* 총 즉시할인금액 */
            , (
                SELECT 
                    SUM((NVL(ORD_PRD_PRD_PRC,0)+NVL(ORD_PRD_OPT_ADD_PRC,0))*(DECODE(ORD_PRD_ORG_IDX, NULL, ORD_PRD_ORD_CNT, 0))) 
                FROM T_ORD_PRD 
                WHERE ORD_ORD_MST_CD = OM.ORD_MST_CD
                ) as TOT_ORD_PRD_PRD_PRC /* 총 상품금액 */
            , OM.ESM_MST_IDX /* 견적관리 IDX */
            , OM.ORD_MST_ORD_NM
        FROM
            T_ORD_MST OM 
        LEFT OUTER JOIN T_PAY_MST PM
        ON  PAY_MST_OID = OM.ORD_MST_CD
        AND PAY_MST_TR_STATUS = 'A'
        AND PAY_MST_RESPCODE = '0000'
        WHERE
            OM.ORD_MST_CD = #{ORD_MST_CD}
        ) T1
        WHERE RNUM = 1
    </select>    
    
    
    <!-- 전체주문 > 상세 > 주문상태 (일괄개수) -->
    <select id="selectOrderStateCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectOrderStateCnt */
        SELECT
            S1.*
            , DECODE(TOTAL_CNT, (PAY_READY_CNT + PAY_CNT + SEND_READY_CNT), 'Y', 'N') AS WHOLE_CANCEL_POSSIBLE_YN /* 전체주문취소 가능 여부 */  
            , DECODE(TOTAL_CNT, (PAY_READY_CNT + PAY_CNT), 'Y', 'N') AS FRONT_WHOLE_CANCEL_POSSIBLE_YN /* FRONT 전체주문취소 가능 여부 */  
            , DECODE(TOTAL_CNT, (PAY_READY_CNT + PAY_CNT), 'Y', 'N') AS COUPON_RESTORE_POSSIBLE_YN /* 사용 쿠폰 복원 가능 여부 */
            , CASE
                WHEN 
                    (EXCEPT_SWAP_TOTAL_CNT = BACK_CNT
                    OR EXCEPT_SWAP_TOTAL_CNT = BACK_APPROVED_CNT
                    OR EXCEPT_SWAP_TOTAL_CNT = BACK_COLLECT_CALL_CNT)
                    /* OR EXCEPT_SWAP_TOTAL_CNT = BACK_COLLECT_END_CNT erp 취소요청 후 반품불가는 불가능 */
                THEN 'Y'
                ELSE 'N'
               END WHOLE_BACK_DENY_POSSIBLE_YN /* 전체반품불가 가능 여부 */
            , DECODE(EXCEPT_SWAP_TOTAL_CNT, BACK_CNT, 'Y', 'N') AS WHOLE_BACK_APPROVED_POSSIBLE_YN /* 전체반품접수승인 가능 여부 */   
            , DECODE(EXCEPT_SWAP_TOTAL_CNT, BACK_APPROVED_CNT, 'Y', 'N') AS WHOLE_BACK_COLLECT_CALL_POSSIBLE_YN /* 전체반품회수지시 가능 여부 */
            , DECODE(EXCEPT_SWAP_TOTAL_CNT, BACK_COLLECT_CALL_CNT, 'Y', 'N') AS WHOLE_BACK_COLLECT_END_POSSIBLE_YN /* 전체반품회수완료 가능 여부 */
            , DECODE(EXCEPT_SWAP_TOTAL_CNT, BACK_COLLECT_END_CNT, 'Y', 'N') AS WHOLE_BACK_END_POSSIBLE_YN /* 전체반품완료 가능 여부 */
            , CASE
                WHEN 
                    (EXCEPT_SWAP_TOTAL_CNT = SEND_END_CNT 
                    OR EXCEPT_SWAP_TOTAL_CNT = FIX_CNT)
                THEN 'Y'
                ELSE 'N'
              END WHOLE_BACK_POSSIBLE_YN /* 전체반품접수 가능 여부 */  
            , DECODE(EXCEPT_SWAP_TOTAL_CNT, REFUND_CNT, 'Y', 'N') AS WHOLE_REFUND_END_POSSIBLE_YN /* 전체환불완료 가능 여부 */   
            , CASE
                WHEN (BACK_CNT + BACK_APPROVED_CNT + BACK_COLLECT_CALL_CNT + BACK_COLLECT_END_CNT + BACK_END_CNT) > 0 THEN 'Y'
                ELSE 'N'
              END BACK_ING_YN /* 반품프로세스 진행중 여부 */
            , CASE
                WHEN 
                    (EXCEPT_SWAP_TOTAL_CNT > (BACK_CNT + BACK_APPROVED_CNT + BACK_COLLECT_CALL_CNT + BACK_COLLECT_END_CNT + BACK_END_CNT) 
                    AND (BACK_CNT + BACK_APPROVED_CNT + BACK_COLLECT_CALL_CNT + BACK_COLLECT_END_CNT + BACK_END_CNT) > 0)
                THEN 'Y'
                ELSE 'N'
              END PARTIAL_BACK_ING_YN /* 부분 반품프로세스 진행중 여부 */
            , DECODE(TOTAL_CNT, CANCEL_CNT, 'Y', 'N') AS WHOLE_CANCEL_END_POSSIBLE_YN /* 전체 취소완료 가능 여부 */           
            , DECODE(TOTAL_CNT, PAY_CNT, 'Y', 'N') AS ORDER_CONFIRM_POSSIBLE_YN /* 주문확정 가능 여부 */                
            , DECODE(TOTAL_CNT,     SEND_READY_CNT, 'Y', 'N') AS ORDER_CONFIRM_CANCEL_POSSIBLE_YN /* 확정취소 가능 여부 */        
        FROM
        (
            SELECT 
                COUNT(0) as TOTAL_CNT,
                SUM(DECODE(ORD_PRD_VDR_IDX,#{ADM_MST_SUB_IDX},1,0))  SCM_TOT_CNT, /* SCM인 경우 본인 업체 상품 개수. SCM 에서만 사용  */
                SUM(DECODE(ORD_PRD_ORD_STATE, #{OST_SWAP_END}, 0, #{OST_SWAP_READY}, 0, #{OST_SWAP_READY_CANCEL}, 0, 1)) AS EXCEPT_SWAP_TOTAL_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_PAY_READY}  ,1,0))  PAY_READY_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_PAY}        ,1,0))  PAY_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_CANCEL_BEFORE_DEPOSIT} ,1,0))  CANCEL_BEFORE_DEPOSIT_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_CANCEL}     ,1,0))  CANCEL_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_CANCEL_END} ,1,0))  CANCEL_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SEND_READY} ,1,0))  SEND_READY_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SEND}       ,1,0))  SEND_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SEND_END}   ,1,0))  SEND_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP}       ,1,0))  SWAP_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_READY} ,1,0))  SWAP_READY_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_READY_CANCEL} ,1,0))  SWAP_READY_CANCEL_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_END}   ,1,0))  SWAP_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_CANCEL},1,0))  SWAP_CANCEL_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_COLLECT_CALL} ,1,0))  SWAP_COLLECT_CALL_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_COLLECT_END} ,1,0))  SWAP_COLLECT_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_SWAP_TARGET_COLLECT_END} ,1,0))  SWAP_TARGET_COLLECT_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_BACK}       ,1,0))  BACK_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_BACK_APPROVED}       ,1,0))  BACK_APPROVED_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_BACK_END}   ,1,0))  BACK_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_BACK_COLLECT_CALL} ,1,0))  BACK_COLLECT_CALL_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_BACK_COLLECT_END} ,1,0))  BACK_COLLECT_END_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_FIX} ,1,0))  FIX_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_REFUND} ,1,0))  REFUND_CNT,
                SUM(DECODE(ORD_PRD_ORD_STATE,#{OST_REFUND_END} ,1,0))  REFUND_END_CNT,
                MAX(DECODE(ORD_MST_PAY_PRC, 0,'N','Y')) AS PG_PAY_YN
            FROM 
                T_ORD_MST OM, T_ORD_PRD OP
            WHERE 
                ORD_MST_CD=#{ORD_MST_CD}
            AND ORD_MST_CD=ORD_ORD_MST_CD
        ) S1
    </select>    
    
    
    <!-- 전체주문 > 상세 > 주문상태 -->
    <select id="selectOrderStateList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectOrderStateList */
        SELECT 
            OP.ORD_PRD_MST_CD
            , OP.ORD_PRD_IDX
            , OP.ORD_PRD_OPT_DTL_IDX            
            , OP.ORD_PRD_ORD_STATE
            , (SELECT 
                    CASE /* 겟잇나우 배송은 주문상태를 다르게 보여줘야 한다. */
                        WHEN OM.ORD_MST_DLV_GBN = 2097 AND CMN_COM_ETC2 IS NOT NULL THEN CMN_COM_ETC2
                        ELSE CMN_COM_NM    
                    END
                FROM T_CMM_COM WHERE CMN_COM_IDX = OP.ORD_PRD_ORD_STATE) as ORD_PRD_ORD_STATE_NM
            , PM.PRD_MST_NM
            , OP.ORD_PRD_ORD_CNT
            , OP.ORD_ORD_EDI_ORD_NO
            , ORD_PRD_IVC_NO
            , OP.ORD_PRD_ORG_IDX
            , OP.ORD_PRD_DLV_TYPE
            , OP.ORD_PRD_SAL_PRC
            , OP.ORD_PRD_ORD_PRC
            , (SELECT OPT_DTL_IDX FROM T_OPT_DTL WHERE OPT_DTL_IDX = (SELECT ORD_PRD_OPT_DTL_IDX FROM T_ORD_PRD WHERE ORD_PRD_IDX = OP.ORD_PRD_ORG_IDX)) AS ORG_PRD_OPT_DTL_IDX
            , OP.ORD_ORD_MST_CD
            , OP.ORD_PRD_SEQ
        FROM 
            T_ORD_PRD OP, T_ORD_MST OM, T_PRD_MST PM, T_OPT_DTL DTL
        WHERE 
            OP.ORD_ORD_MST_CD=#{ORD_MST_CD}
        AND OP.ORD_ORD_MST_CD = OM.ORD_MST_CD
        AND OP.ORD_PRD_MST_CD=PM.PRD_MST_CD
        AND OP.ORD_PRD_OPT_DTL_IDX=DTL.OPT_DTL_IDX(+)
        <if test="ORD_PRD_IDX != null and ORD_PRD_IDX != ''">
            AND OP.ORD_PRD_IDX = #{ORD_PRD_IDX}
        </if>
        <if test="ORD_PRD_IDX == null or ORD_PRD_IDX == ''">
            <if test="ordPrdIdxs != null and ordPrdIdxs.length > 0">
                AND OP.ORD_PRD_IDX IN
                <foreach collection="ordPrdIdxs" item="ordPrdIdx" open="(" close=")">
                    #{ordPrdIdx}
                </foreach>
            </if>
        </if>
        ORDER BY
            ORD_ORD_EDI_ORD_NO
    </select>
    
    
    <!-- 전체주문 > 상세 > 주문상태 변경 > 상태변경 -->
    <update id="updateOrderState" parameterType="java.util.HashMap">
        /* BatchOrderState.updateOrderState */
        UPDATE  T_ORD_PRD  SET 
            ORD_PRD_ORD_STATE = #{ORD_PRD_ORD_STATE}
            <if test="ORD_PRD_DLV_TYPE != null and !ORD_PRD_DLV_TYPE.equals('-1'.toString())">
                , ORD_PRD_DLV_TYPE = #{ORD_PRD_DLV_TYPE} /* 배송구분 */
            </if>
            <if test="ORD_PRD_DLV_TYPE != null and ORD_PRD_DLV_TYPE.equals('-1'.toString())">
                , ORD_PRD_DLV_TYPE = '' /* 배송구분 리셋*/
            </if>
            <if test="ORD_PRD_ERP_DLV_CD != null and !ORD_PRD_ERP_DLV_CD.equals('-1'.toString())">
                , ORD_PRD_ERP_DLV_CD = #{ORD_PRD_ERP_DLV_CD} /* 배송처 */
            </if>
            <if test="ORD_PRD_ERP_DLV_CD != null and ORD_PRD_ERP_DLV_CD.equals('-1'.toString())">
                , ORD_PRD_ERP_DLV_CD = '' /* 배송처 리셋*/
            </if>
            <if test="ORD_PRD_SYS_SGS != null and !ORD_PRD_SYS_SGS.equals('-1'.toString())">
                , ORD_PRD_SYS_SGS = #{ORD_PRD_SYS_SGS} /* SYS/SGS 택배구분 */
            </if>
            <if test="ORD_PRD_SYS_SGS != null and ORD_PRD_SYS_SGS.equals('-1'.toString())">
                , ORD_PRD_SYS_SGS = '' /* SYS/SGS 택배구분 리셋 */
            </if>
            <if test="ORD_PRD_DLV_DUE_DT != null and ORD_PRD_DLV_DUE_DT != ''">
                , ORD_PRD_DLV_DUE_DT = #{ORD_PRD_DLV_DUE_DT} /* 배송예정일 */
            </if>
            <if test="ERP_INVOICE != null and ERP_INVOICE != ''">
                , ORD_PRD_IVC_NO = #{ERP_INVOICE}    /*송장번호*/
            </if>
            <if test="ORD_PRD_SLP_NO != null and ORD_PRD_SLP_NO != ''">
                , ORD_PRD_SLP_NO = #{ORD_PRD_SLP_NO} /*전표번호*/
            </if>
        WHERE 
            ORD_ORD_MST_CD=#{ORD_MST_CD}
            AND ORD_PRD_IDX=#{ORD_PRD_IDX}
    </update>    
        
        
    <!-- 전체주문 > 상세 > 주문상태 변경 > 주문상태변경내역 등록 -->
    <insert id="insertOrderHistory" parameterType="java.util.HashMap">
        /* BatchOrderState.insertOrderHistory */
        INSERT INTO T_ORD_PRD_HIS (
            ORD_PRD_HIS_IDX, 
            ORD_ORD_MST_CD, ORD_PRD_MST_CD, ORD_ORD_PRD_IDX, 
            ORD_PRD_ORD_STATE, ORD_CMN_COM_IDX, ORD_PRD_DSC, 
            ORD_PRD_REG_DT, ORD_PRD_REG_TYPE, ORD_PRD_REG_ID, ORD_PRD_REG_IP
            , ORD_PRD_IVC_NO            
        ) SELECT
            SEQ_ORD_PRD_HIS_IDX.NEXTVAL, 
            ORD_ORD_MST_CD, ORD_PRD_MST_CD, ORD_PRD_IDX, 
            ORD_PRD_ORD_STATE, #{SELECT_REASON}, #{ORD_PRD_DSC}, 
            TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #{ORD_PRD_REG_TYPE}, #{REG_ID}, #{REG_IP}
            , #{ORD_PRD_IVC_NO}           
        FROM 
            T_ORD_PRD
        WHERE 
            ORD_ORD_MST_CD=#{ORD_MST_CD}
        AND ORD_PRD_IDX=#{ORD_PRD_IDX}
    </insert>        
    
    
    <!-- 회원 캐쉬백 정보 -->
    <select id="selectMemberCashbagInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectMemberCashbagInfo */
        SELECT 
            MEM_MST_OCB_NO
        FROM T_MEM_VIEW
        WHERE MEM_MST_MEM_ID = #{MEM_MST_MEM_ID}
        AND MEM_MST_OCB_REQ_YN = 'Y'        
    </select>     
    
    
    <!-- 캐쉬백 포인트 조회/사용/적립 정보 -->
    <select id="selectOrderCashbagInfo" parameterType="HashMap" resultType="HashMap">
        /* BatchOrderState.selectOrderCashbagInfo */
        <![CDATA[
            SELECT 
                PAY_MST_KICC_CARD_NO
                , PAY_MST_TID
                , PAY_MST_MID
            FROM T_PAY_MST
            WHERE PAY_MST_OID = #{ORD_MST_CD}
            AND PAY_MST_TR_STATUS = #{trStatus}
            AND PAY_MST_RESPCODE = '0000'
            AND ROWNUM = 1
        ]]> 
    </select>    
    
    
    <!-- PayMaster 등록 -->
    <insert id="insertPayMaster" parameterType="hashmap">
        <selectKey keyProperty="SEQ_PAY_MST_IDX" resultType="integer" order="BEFORE">
            SELECT SEQ_PAY_MST_IDX.NEXTVAL FROM DUAL
        </selectKey>
        /* BatchOrderState.insertPayMaster */
        INSERT INTO T_PAY_MST (
            PAY_MST_IDX, PAY_MST_RESPCODE, PAY_MST_RESPMSG, PAY_MST_MID, PAY_MST_OID, 
            PAY_MST_AMOUNT, PAY_MST_TID, PAY_MST_PAYTYPE, 
            PAY_MST_PAYDATE, 
            PAY_MST_HASHDATA, 
            PAY_MST_FINANCECODE, PAY_MST_FINANCENAME, PAY_MST_ESCROWYN, PAY_MST_TRANSAMOUNT, PAY_MST_EXCHANGERATE, 
            PAY_MST_BUYER, PAY_MST_BUYERID, PAY_MST_BUYERPHONE, PAY_MST_BUYEREMAIL, PAY_MST_PRODUCTINFO, 
            PAY_MST_CARDINSTALLMONTH, PAY_MST_CARDNOINTYN, PAY_MST_FINANCEAUTHNUM, PAY_MST_ACCOUNTNUM, 
            PAY_MST_CASTAMOUNT, PAY_MST_CASCAMOUNT, PAY_MST_CASFLAG, PAY_MST_CASSEQNO, PAY_MST_CASHRECEIPTNUM, 
            PAY_MST_CASHRECEIPTSELFYN, PAY_MST_CASHRECEIPTKIND, PAY_MST_TELNO, PAY_MST_TR_STATUS, 
            PAY_MST_KAKAO_PAYMETHOD, PAY_MST_KAKAO_AUTHCODE, PAY_MST_KAKAO_CARDCODE, PAY_MST_KAKAO_CARDNAME,
            PAY_MST_KAKAO_CARDQUOTA, PAY_MST_KAKAO_CARDINTEREST, PAY_MST_KAKAO_CARDCL, PAY_MST_KAKAO_CARDBIN,
            PAY_MST_KAKAO_CARDPOINT, PAY_MST_KAKAO_NONREPTOKEN,         
            PAY_MST_KAKAO_AUTHDATE,
            PAY_MST_CLOSEDATE,
            PAY_MST_KICC_AUTH_NO,
            PAY_MST_KICC_TRAN_DATE,
            PAY_MST_KICC_CARD_NO,
            PAY_MST_KICC_ISSUER_CD,
            PAY_MST_KICC_ISSUER_NM,
            PAY_MST_KICC_ACQUIRER_CD,
            PAY_MST_KICC_ACQUIRER_NM,
            PAY_MST_KICC_INSTALL_PERIOD,
            PAY_MST_KICC_NOINT,
            PAY_MST_KICC_PNT_AUTH_NO,
            PAY_MST_KICC_PNT_TRAN_DATE,
            PAY_MST_KICC_BANK_CD,
            PAY_MST_KICC_BANK_NM,
            PAY_MST_KICC_ACCOUNT_NO,
            PAY_MST_KICC_DEPOSIT_NM,
            PAY_MST_KICC_EXPIRE_DATE,
            PAY_MST_KICC_CASH_RES_CD,
            PAY_MST_KICC_CASH_RES_MSG,
            PAY_MST_KICC_CASH_AUTH_NO,
            PAY_MST_KICC_CASH_TRAN_DATE,
            PAY_MST_KICC_AUTH_ID,
            PAY_MST_KICC_BILLID,
            PAY_MST_KICC_MOBILE_NO,
            PAY_MST_KICC_USED_PNT,
            PAY_MST_KICC_REMAIN_PNT,
            PAY_MST_KICC_PAY_PNT,
            PAY_MST_KICC_ACCURE_PNT,
            PAY_MST_KICC_ESCROW_YN,
            PAY_MST_KICC_COMPLEX_YN,
            PAY_MST_KICC_CANC_ACQ_DATE,
            PAY_MST_KICC_CANC_DATE,
            PAY_MST_KICC_REFUND_DATE,
            PAY_MST_KICC_ARS_NO
        ) VALUES (
            #{SEQ_PAY_MST_IDX}, #{PAY_MST_RESPCODE}, #{PAY_MST_RESPMSG}, #{PAY_MST_MID}
            , NVL(#{PAY_MST_OID}, #{ORD_MST_CD})
            , #{PAY_MST_AMOUNT}, #{PAY_MST_TID}, #{PAY_MST_PAYTYPE},
            <if test="PAY_MST_PAYDATE != null and PAY_MST_PAYDATE != ''">
                #{PAY_MST_PAYDATE},
            </if> 
            <if test="PAY_MST_PAYDATE == null or PAY_MST_PAYDATE == ''">
                TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
            </if>
            #{PAY_MST_HASHDATA},
            #{PAY_MST_FINANCECODE}, #{PAY_MST_FINANCENAME}, #{PAY_MST_ESCROWYN}, #{PAY_MST_TRANSAMOUNT}, #{PAY_MST_EXCHANGERATE},
            #{PAY_MST_BUYER}, #{PAY_MST_BUYERID}, #{PAY_MST_BUYERPHONE}, #{PAY_MST_BUYEREMAIL}, #{PAY_MST_PRODUCTINFO},
            #{PAY_MST_CARDINSTALLMONTH}, #{PAY_MST_CARDNOINTYN}, #{PAY_MST_FINANCEAUTHNUM}, #{PAY_MST_ACCOUNTNUM},
            #{PAY_MST_CASTAMOUNT}, #{PAY_MST_CASCAMOUNT}, #{PAY_MST_CASFLAG}, #{PAY_MST_CASSEQNO}, #{PAY_MST_CASHRECEIPTNUM},
            #{PAY_MST_CASHRECEIPTSELFYN}, #{PAY_MST_CASHRECEIPTKIND}, #{PAY_MST_TELNO}, #{PAY_MST_TR_STATUS},
            #{PAY_MST_KAKAO_PAYMETHOD}, #{PAY_MST_KAKAO_AUTHCODE}, #{PAY_MST_KAKAO_CARDCODE}, #{PAY_MST_KAKAO_CARDNAME},
            #{PAY_MST_KAKAO_CARDQUOTA}, #{PAY_MST_KAKAO_CARDINTEREST}, #{PAY_MST_KAKAO_CARDCL}, #{PAY_MST_KAKAO_CARDBIN},
            #{PAY_MST_KAKAO_CARDPOINT}, #{PAY_MST_KAKAO_NONREPTOKEN}, 
            #{PAY_MST_KAKAO_AUTHDATE},
            #{PAY_MST_CLOSEDATE},
            #{PAY_MST_KICC_AUTH_NO},
            #{PAY_MST_KICC_TRAN_DATE},
            #{PAY_MST_KICC_CARD_NO},
            #{PAY_MST_KICC_ISSUER_CD},
            #{PAY_MST_KICC_ISSUER_NM},
            #{PAY_MST_KICC_ACQUIRER_CD},
            #{PAY_MST_KICC_ACQUIRER_NM},
            #{PAY_MST_KICC_INSTALL_PERIOD},
            #{PAY_MST_KICC_NOINT},
            #{PAY_MST_KICC_PNT_AUTH_NO},
            #{PAY_MST_KICC_PNT_TRAN_DATE},
            #{PAY_MST_KICC_BANK_CD},
            #{PAY_MST_KICC_BANK_NM},
            #{PAY_MST_KICC_ACCOUNT_NO},
            #{PAY_MST_KICC_DEPOSIT_NM},
            #{PAY_MST_KICC_EXPIRE_DATE},
            #{PAY_MST_KICC_CASH_RES_CD},
            #{PAY_MST_KICC_CASH_RES_MSG},
            #{PAY_MST_KICC_CASH_AUTH_NO},
            #{PAY_MST_KICC_CASH_TRAN_DATE},
            #{PAY_MST_KICC_AUTH_ID},
            #{PAY_MST_KICC_BILLID},
            #{PAY_MST_KICC_MOBILE_NO},
            #{PAY_MST_KICC_USED_PNT},
            #{PAY_MST_KICC_REMAIN_PNT},
            #{PAY_MST_KICC_PAY_PNT},
            #{PAY_MST_KICC_ACCURE_PNT},
            #{PAY_MST_KICC_ESCROW_YN},
            #{PAY_MST_KICC_COMPLEX_YN},
            #{PAY_MST_KICC_CANC_ACQ_DATE},
            #{PAY_MST_KICC_CANC_DATE},
            #{PAY_MST_KICC_REFUND_DATE},
            #{PAY_MST_KICC_ARS_NO}       
        ) 
    </insert>   
    
    
    <!-- 상품 마스터 테이블 재고 원복/차감-->
     <update id="updatePrdMstStock" parameterType="HashMap">
        /* BatchOrderState.updatePrdMstStock */
        UPDATE T_PRD_MST
        SET PRD_MST_SEL_CNT = PRD_MST_SEL_CNT + #{ORD_PRD_ORD_CNT}
        WHERE PRD_MST_CD = #{ORD_PRD_MST_CD}
     </update>      
        
        
     <!-- 상품 옵션 테이블 재고 원복/차감-->
     <update id="updatePrdOptStock" parameterType="HashMap">
        /* BatchOrderState.updatePrdOptStock */
        UPDATE T_OPT_DTL
        SET OPT_DTL_STK_CNT = OPT_DTL_STK_CNT + #{ORD_PRD_ORD_CNT}
        WHERE OPT_DTL_IDX = #{ORD_PRD_OPT_DTL_IDX}
     </update>      
     
     
    <!-- 쿠폰 사용 여부 업데이트 -->
    <update id="updateCpnUseYn" parameterType="HashMap">
        /* BatchOrderState.updateCpnUseYn */
        UPDATE 
            T_CPN_MEM
        SET 
            CPN_MEM_USE_YN = #{CPN_MEM_USE_YN}
            <if test="CPN_MEM_USE_YN != null and CPN_MEM_USE_YN.equals('Y'.toString())">
                , CPN_MEM_USE_DT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
            </if>
            <if test="CPN_MEM_USE_YN != null and CPN_MEM_USE_YN.equals('N'.toString())">
                , CPN_MEM_USE_DT = ''
            </if>
        WHERE CPN_MEM_ID = #{CPN_MEM_ID}
        AND CPN_MST_IDX = #{CPN_MST_IDX}
        AND CPN_MEM_IDX = #{CPN_MEM_IDX}
    </update>     
    
    
    <!-- 주문 쿠폰 리스트 -->
    <select id="selectOrderCouponList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectOrderCouponList */
        SELECT
            CPN_MST_IDX
            , (SELECT CPN_MST_TITLE FROM T_CPN_MST WHERE CPN_MST_IDX = TOC.CPN_MST_IDX) as CPN_MST_TITLE
            , (SELECT CPN_MST_GBN FROM T_CPN_MST WHERE CPN_MST_IDX = TOC.CPN_MST_IDX) as CPN_MST_GBN
            , SUM(ORD_CPN_DC_AMT) as SUM_ORD_CPN_DC_AMT
            , CPN_MEM_IDX
        FROM T_ORD_CPN TOC
        WHERE ORD_MST_CD = #{ORD_MST_CD}
        GROUP BY CPN_MST_IDX, CPN_MEM_IDX
    </select>   
    
     
     <!-- 교환상품(신규상품) idx 가져오기 -->
    <select id="selectNewSwapProduct" parameterType="java.util.HashMap" resultType="String">
        /* BatchOrderState.selectNewSwapProduct */
        <![CDATA[
            SELECT 
                ORD_PRD_IDX 
            FROM T_ORD_PRD
            WHERE ORD_PRD_ORG_IDX = #{ORD_PRD_IDX}
            AND ORD_PRD_ORD_STATE = #{OST_SWAP_READY}
            AND ROWNUM = 1
         ]]>
    </select>
    
    <!-- KICC 에스크로 배송완료시 마지막 상품인지 체크하기 위한 쿼리 -->
    <select id="selectKiccSendEndInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* BatchOrderState.selectKiccSendEndInfo */
        SELECT
            COUNT(1) as SEND_END_HIS_CNT /* 교환상품 제외, 배송완료 이력이 있는 상품 개수 */
            , 
            (
                SELECT COUNT(1) FROM T_ORD_PRD WHERE ORD_ORD_MST_CD = #{ORD_MST_CD} AND ORD_PRD_ORG_IDX IS NULL
            ) as TOT_CNT /* 교환상품 제외한 상품 개수. SEND_END_HIS_CNT와 TOT_CNT가 동일한 경우에만 KICC에 전송해야 한다 */
            , 
            (
                SELECT MAX(ORD_PRD_IVC_NO) KEEP(DENSE_RANK FIRST ORDER BY ORD_PRD_IDX)
                FROM T_ORD_PRD WHERE ORD_ORD_MST_CD = #{ORD_MST_CD} AND ORD_PRD_ORG_IDX IS NULL        
            ) as IVC_NO /* 주문번호 기준 첫번째 상품 송장번호 */
            , 
            (
                SELECT DLV_CPN_ESC_CD FROM T_DLV_CPN WHERE DLV_CPN_IDX = 
                (
                    SELECT MAX(ORD_DLV_CPN_IDX) KEEP(DENSE_RANK FIRST ORDER BY ORD_PRD_IDX)
                    FROM T_ORD_PRD WHERE ORD_ORD_MST_CD = #{ORD_MST_CD} AND ORD_PRD_ORG_IDX IS NULL        
                ) 
            ) as DLV_CPN_ESC_CD /* 주문번호 기준 첫번째 상품 택배사 코드(KICC 발송용) */
        FROM
        (
        SELECT 
            MAX(ORD_PRD_HIS_IDX)
        FROM T_ORD_PRD_HIS HIS, T_ORD_PRD TOP
        WHERE HIS.ORD_ORD_PRD_IDX = TOP.ORD_PRD_IDX
        AND HIS.ORD_ORD_MST_CD = #{ORD_MST_CD}
        AND HIS.ORD_PRD_ORD_STATE = '408' /* 배송완료만 가져온다 */
        AND TOP.ORD_PRD_ORG_IDX IS NULL
        GROUP BY ORD_ORD_PRD_IDX
        )
    </select>
</mapper>